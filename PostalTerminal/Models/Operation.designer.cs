#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PostalTerminal.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="postalterminaldb")]
	public partial class OperationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPostalTerminalHandler(PostalTerminalHandler instance);
    partial void UpdatePostalTerminalHandler(PostalTerminalHandler instance);
    partial void DeletePostalTerminalHandler(PostalTerminalHandler instance);
    #endregion
		
		public OperationDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["postalterminaldbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PostalTerminalHandler> PostalTerminalHandlers
		{
			get
			{
				return this.GetTable<PostalTerminalHandler>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostalTerminalHandler")]
	public partial class PostalTerminalHandler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostalTerminals_Id;
		
		private int _Handlers_User_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostalTerminals_IdChanging(int value);
    partial void OnPostalTerminals_IdChanged();
    partial void OnHandlers_User_idChanging(int value);
    partial void OnHandlers_User_idChanged();
    #endregion
		
		public PostalTerminalHandler()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalTerminals_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PostalTerminals_Id
		{
			get
			{
				return this._PostalTerminals_Id;
			}
			set
			{
				if ((this._PostalTerminals_Id != value))
				{
					this.OnPostalTerminals_IdChanging(value);
					this.SendPropertyChanging();
					this._PostalTerminals_Id = value;
					this.SendPropertyChanged("PostalTerminals_Id");
					this.OnPostalTerminals_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handlers_User_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Handlers_User_id
		{
			get
			{
				return this._Handlers_User_id;
			}
			set
			{
				if ((this._Handlers_User_id != value))
				{
					this.OnHandlers_User_idChanging(value);
					this.SendPropertyChanging();
					this._Handlers_User_id = value;
					this.SendPropertyChanged("Handlers_User_id");
					this.OnHandlers_User_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
